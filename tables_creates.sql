USE Online_shop;
CREATE TABLE IF NOT EXISTS onlineShop(
id SERIAL PRIMARY KEY,
name VARCHAR(60) NOT NULL,
staff BIGINT NOT NULL,
address VARCHAR(100) NOT NULL,
email VARCHAR(60) NOT NULL,
phone_number BIGINT NOT NULL,
opening_time TIMESTAMP NOT NULL,
closing_time TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS categories(
id SERIAL PRIMARY KEY,
name VARCHAR(50) NOT NULL,
onlineShop_id BIGINT UNSIGNED,
CONSTRAINT fk_onlineShop_categories FOREIGN KEY (onlineShop_id) REFERENCES onlineShop (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS discounts(
id SERIAL PRIMARY KEY,
name VARCHAR(100) NOT NULL,
start_date TIMESTAMP NOT NULL,
end_date TIMESTAMP NULL
);

CREATE TABLE IF NOT EXISTS brands(
id SERIAL PRIMARY KEY,
name VARCHAR(30) NOT NULL,
on_sale TINYINT,
discount_id BIGINT UNSIGNED,
CONSTRAINT fk_brand_discounts FOREIGN KEY (discount_id) REFERENCES discounts(id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS categories_has_brands(
category_id BIGINT UNSIGNED NOT NULL,
onlineShop_id BIGINT UNSIGNED NOT NULL,
brand_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_category_has_brands_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_category_has_brands_onlineShop_id FOREIGN KEY (onlineShop_id) REFERENCES onlineShop (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_category_has_brands_brand_id FOREIGN KEY (brand_id) REFERENCES brands (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS deliveries(
id SERIAL PRIMARY KEY,
delivery_type VARCHAR (40) NOT NULL,
status VARCHAR(40)
);

CREATE TABLE IF NOT EXISTS customers(
id SERIAL PRIMARY KEY,
first_name VARCHAR(40) NOT NULL,
last_name VARCHAR(60) NOT NULL,
email VARCHAR(60) UNIQUE NOT NULL,
phone_number VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS orders(
id SERIAL PRIMARY KEY,
order_date TIMESTAMP,
status VARCHAR(40),
customer_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_customer_orders FOREIGN KEY (customer_id) REFERENCES customers(id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS orderDeliveries(
id SERIAL PRIMARY KEY,
country VARCHAR(60) NOT NULL,
city VARCHAR(80) NOT NULL,
street VARCHAR(80) NOT NULL,
building INT NOT NULL,
postal_code INT NOT NULL,
order_id BIGINT UNSIGNED NOT NULL,
delivery_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_order_deliveries FOREIGN KEY (order_id) REFERENCES orders (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_order_orderDeliveries FOREIGN KEY (delivery_id) REFERENCES deliveries (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS payments(
id SERIAL PRIMARY KEY,
payment_method VARCHAR(40),
date TIMESTAMP,
status VARCHAR(40),
order_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_order_payments FOREIGN KEY (order_id) REFERENCES orders (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS products(
id SERIAL PRIMARY KEY,
name VARCHAR(60) NOT NULL,
price DOUBLE NOT NULL,
in_stock TINYINT NOT NULL,
description TEXT(100) NULL, 
brand_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_brand_products FOREIGN KEY (brand_id) REFERENCES brands (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS orderDetails(
id SERIAL PRIMARY KEY,
quantity INT UNSIGNED NOT NULL,
total_price DOUBLE NOT NULL,
order_id BIGINT UNSIGNED NOT NULL,
product_id BIGINT UNSIGNED NOT NULL,
payment_id BIGINT UNSIGNED NOT NULL,
delivery_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_order_details FOREIGN KEY (order_id) REFERENCES orders (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_order_product_details FOREIGN KEY (product_id) REFERENCES products (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_order_payment_details FOREIGN KEY (payment_id) REFERENCES payments (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_order_delivery_details FOREIGN KEY (delivery_id) REFERENCES deliveries (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS reviews(
id SERIAL PRIMARY KEY,
rate INT UNSIGNED NOT NULL,
description TEXT(500) NULL,
date TIMESTAMP,
product_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_product_reviews FOREIGN KEY (product_id) REFERENCES products (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS returnRequest(
id SERIAL PRIMARY KEY,
reason TEXT(200) NOT NULL,
date TIMESTAMP,
status VARCHAR(40),
customer_id BIGINT UNSIGNED NOT NULL,
CONSTRAINT fk_customer_return_request FOREIGN KEY (customer_id) REFERENCES customers (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);
